{### Builds validation for services_route.yml. Block inherits from none and extends to svc_intf_val_tmpl.j2 ###}

{## Adds the results of this rendered file into the bse_fbc_val_tmpl file ##}
{% extends ansible_network_os + "/svc_intf_val_tmpl.j2" %}


{## show ip ospf interface brief vrf all ##}
{% block show_ip_ospf_int_brief%}
{% if bse.device_name.spine not in inventory_hostname %}
  - show ip ospf interface brief vrf all:
{% for each_proc in svc_rte.ospf %}{% if each_proc.interface is defined %}
{# Checks if local host is in the switches defined under inteface, if not then checks under process #}
{% for each_intf in each_proc.interface %}{% if inventory_hostname in each_intf.switch |default(each_proc.switch) %}
{% for each_name in each_intf.name %}
      {{ each_name | replace(fbc.adv.bse_intf.intf_fmt, fbc.adv.bse_intf.intf_short) | replace(fbc.adv.bse_intf.lp_fmt, 'Lo') }}:
        proc: '{{ each_proc.process }}'
        area: {{ each_intf.area }}
        status: up
{% if fbc.adv.bse_intf.lp_fmt in each_name or each_intf.passive is defined %}
        nbr_count: '0'
{% else %}
        nbr_count: '>=1'
{% endif %}
{% endfor %}{% endif %}
{% endfor %}{% endif %}
{% endfor %}
{% endif %}
{% endblock %}


{## show bgp vrf all ipv4 unicast ##}
{% block show_bgp_vrf_all %}
{% if bse.device_name.spine not in inventory_hostname %}
{### BGP NETWORK ###}
{% for each_tnt in svc_rte.bgp.tnt_advertise  %}
{% set network = [] %}
{% set summary = [] %}
{% if each_tnt.network is defined %}{% for each_net in each_tnt.network %}
{# If local host is in either network.switch or tnt.switch add to list, use list as in some situations can get duplicates #}
{% if inventory_hostname in each_net.switch | default(each_tnt.switch) %}{% for each_pfx in each_net.prefix %}
    {{ network.append(each_pfx) }}
{% endfor %}{% endif %}
{% endfor %}{% endif %}
{### BGP SUMMARY ###}
{% if each_tnt.summary is defined %}{% for each_sum in each_tnt.summary %}
{# If local host is in either summary.switch or tnt.switch add to list, use list as in some situations can get duplicates #}
{% if inventory_hostname in each_sum.switch | default(each_tnt.switch) %}{% for each_pfx in each_sum.prefix %}
    {{ summary.append(each_pfx) }}
{% endfor %}{% endif %}
{% endfor %}{% endif %}
{# Output of the temp lists to create the Data model for the tenant #}
{% if network | length != 0 or summary | length != 0 %}
  - show bgp vrf all ipv4 unicast:
{% endif %}
{% for each_net in network | unique %}
      {{ each_net }}:
        'vrf': {{ each_tnt.name }}
        'best': 'bestpath'
        'type': 'local'
        'status': 'valid'
{% endfor %}
{% for each_sum in summary | unique %}
      {{ each_sum }}:
        'vrf': {{ each_tnt.name }}
        'best': 'bestpath'
        'type': 'aggregate'
        'status': 'valid'
{% endfor %}
{% endfor %}
{% endif %}
{% endblock %}


{### show ip route vrf all ###}
{% block show_ip_route_vrf_all%}
{% if bse.device_name.spine not in inventory_hostname %}
  - show ip route vrf all:
{% for each_grp_tnt in svc_rte.static_route %}{% if each_grp_tnt.route is defined %}
{% for each_tnt in each_grp_tnt.tenant %}
{# Checks if local host is in the switches defined under route, if not then checks under main dictionary #}
{% for each_rte in each_grp_tnt.route %}{% if inventory_hostname in each_rte.switch |default(each_grp_tnt.switch) %}
{% for each_pfx in each_rte.prefix %}
      "{{ each_pfx }}":
        vrf: {{ each_tnt }}
        ad: "{{ each_rte.ad | default('1') }}"
        next-hop: {{ each_rte.gateway | default(each_rte.interface) }}
{% endfor %}
{% endif %}{% endfor %}
{% endfor %}
{% endif %}{% endfor %}
{% endif %}
{% endblock %}




