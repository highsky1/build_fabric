---
###################### Service: Tenant  ######################
# VLANs will only be Layer 2 unless an ip address is assigned to them.
# VRFs will only be created on a border or leaf if a VLAN within that VRF is to be created on that device type
# Even if it is not a L3_tenant still creates VRF and reserves the L3VNI/VLAN (stops renumbering if made L3_tenant in the future)
# To add a non-anycast SVI create the VLAN as normal but with extra `VXLAN: False` dict. The SVI is defined under service_interface.yml as `type: svi`

# At a minimum per-tenant you need:
# - tenant_name: Name                     Name of the VRF
#   l3_tenant: True or False              Does it need SVIs or is routing done on a device external to the L&S fabric (i.e router)
#   vlans:                                VLANs within this tenant
#   - num: Number                         VLAN number
#     name: Name                          VLAN Name

# These settings are optional and need not be set. Setting them overrides the explicit default values
#   bgp_redist_tag: integer               Set tag used to redistribute SVI int oBGP (default uses TNT SVI number)
#     ip_addr: x.x.x.x/24                 Adding an IP address makes it a L3 VLAN (default L2 only)
#     ipv4_bgp_redist: True or False      Whether the SVI is redistributed into IPv4 BGP addr-fam (default True unless no ip_addr in which case is False)
#     create_on_leaf: True or False       Whether this VLAN is created on the leafs (default True)
#     create_on_border: True or False     Whether this VLAN is created on the borders (default False)

#### Base variables ####
svc_tnt:
  tnt:
    - tenant_name: BLU
      l3_tenant: True
      vlans:
        - num: 10
          name: blu_compute_vl10
          ip_addr: 10.10.10.1/24
        - num: 15
          name: blu_storage_vl15
          ip_addr: 10.10.15.1/24
        - num: 20
          name: bl_ha_keepalive_vl20
        - num: 30
          name: blu_lb_vip_vl30
          ip_addr: 10.10.30.1/24
          ipv4_bgp_redist: False
        - num: 510
          name: blu_ospf_vl10
          vxlan: False
        - num: 515
          name: blu_ospf_vl15
          vxlan: False
        - num: 530
          name: blu_ospf_vl30
          vxlan: False

    - tenant_name: GRN
      l3_tenant: false
      vlans:
        - num: 110
          name: grn_web_vl110
          create_on_border: True
        - num: 111
          name: grn_svc_vl111
          create_on_border: True

    - tenant_name: AMB
      l3_tenant: false
      vlans:
        - num: 210
          name: amb_web_vl210
          create_on_border: True
          create_on_leaf: False
        - num: 211
          name: amb_svc_vl211
          create_on_border: True
          create_on_leaf: False

    - tenant_name: RED
      l3_tenant: true
      bgp_redist_tag: 99
      vlans:
        - num: 99
          name: red_inet_vl99
          vxlan: False
          create_on_border: True
          create_on_leaf: False

#### Advanced variables ####
# Each L3 Tenant requires a VLAN and VNI. These are automatically generated by incrementing the L3VNI base_vlan and base_vni
# Each tenant vlan requires a VNI. These are formed of an increment of 10000 per-tenant with each VLAN number added to this

  adv:
    bse_vni:
      tnt_vlan: 3001          # Starting VLAN number for transit L3VNI
      l3vni: 10003001         # Starting VNI number for transit L3VNI
      l2vni: 10000            # Start L2VNI and the range to add to each tenants vlan.
    vni_incre:
      tnt_vlan: 1             # Value by which to increase transit L3VNI VLAN number for each tenant
      l3vni: 1                # Value by which to increase transit L3VNI VNI number for each tenant
      l2vni: 10000            # Value by which to increase the L2VNI range used (range + vlan) for each tenant

# service_routing.yml (svc_rte.adv.redist) takes precedence, this is only used if it is not defined in service_routing.yml
    redist:
      rm_name: RM_src->dst    # Name can be anything but must include src and dst as they are replaced with 'CONN' and 'BGPxx_VRF'